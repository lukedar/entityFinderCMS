<?php

/**
 * @file
 * event_finder_api module
 */


/*
 * Implements hook_views_pre_render().
 */
function event_finder_api_views_pre_render(&$view) {

  $results = &$view->result;
  foreach ($results as $key => $result) {
    switch ($view->name == 'events') {

      case 'events':
        //Event type
        if(isset($results[$key]->field_field_event_type[0]['raw']['tid'])) {
          $event_type_tid = $results[$key]->field_field_event_type[0]['raw']['tid'];
          $results[$key]->field_field_event_type[0]['raw'] =  _event_finder_api_get_event_type_data($event_type_tid);
        }   
        // Event Location
        if(isset($results[$key]->field_field_location_reference[0]['raw']['target_id'])) {
          $event_location_nid = $results[$key]->field_field_location_reference[0]['raw']['target_id'];
          $results[$key]->field_field_location_reference[0]['raw'] =  _event_finder_api_get_event_location_data($event_location_nid);
        }   
        
        break;

    }
  }
}

/*
 * Returns a node id and title.
 */ 
function _event_finder_api_get_event_location_data($nid) {  
  if($nid) {
    $node = node_load($nid);
    $field = array('title' => $node->title, 'nid' => $node->nid);
  }
  return $field;
}

/*
 * Returns term name and term
 */ 
function _event_finder_api_get_event_type_data($tid) {
  $term = taxonomy_term_load($tid);
  $term_name = $term->name;
  $term_data = array('term_name' => $term_name , 'tid' => $tid);
  return $term_data;
}

    